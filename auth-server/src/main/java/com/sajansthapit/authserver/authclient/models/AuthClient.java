package com.sajansthapit.authserver.authclient.models;import jakarta.persistence.*;import org.hibernate.annotations.CreationTimestamp;import org.hibernate.annotations.UpdateTimestamp;import java.time.Instant;import java.util.HashSet;import java.util.Set;@Entity@Table(name = "auth_client")public class AuthClient {    @Id    private String id;    @Column(name = "client_id")    private String clientId;    @Column(name = "client_secret")    private String clientSecret;    @Column(name = "client_secret_expires_at")    private Instant clientSecretExpiresAt;    @CreationTimestamp    @Column(name = "client_id_issued_at")    private Instant clientIdIssuedAt;    @UpdateTimestamp    @Column(name = "updated_at")    private Instant updatedAt;    @Column(name = "client_name")    private String clientName;    //TODO    //Add require consent    @ManyToMany(fetch = FetchType.LAZY)    @JoinTable(name = "auth_client_redirect_uris",    joinColumns = @JoinColumn(name = "auth_client_id", referencedColumnName = "id"))    private Set<RedirectUri> redirectUris = new HashSet<>();    @ManyToMany(fetch = FetchType.LAZY)    @JoinTable(name = "auth_client_scopes",    joinColumns = @JoinColumn(name = "auth_client_id", referencedColumnName = "id"))    private Set<Scope> scopes = new HashSet<>();    @ManyToMany(fetch = FetchType.LAZY)    @JoinTable(name = "auth_client_post_logout_uris",    joinColumns = @JoinColumn(name = "auth_client_id", referencedColumnName = "id"))    private Set<PostLogoutRedirectUri> postLogoutRedirectUris = new HashSet<>();    @ManyToMany(fetch = FetchType.LAZY)    @JoinTable(name = "auth_client_authentication_method",            joinColumns = @JoinColumn(name = "auth_client_id", referencedColumnName = "id"))    private Set<AuthenticationMethod> authenticationMethods = new HashSet<>();    @ManyToMany(fetch = FetchType.LAZY)    @JoinTable(name = "auth_client_authorization_grant_type",            joinColumns = @JoinColumn(name = "auth_client_id", referencedColumnName = "id"))    private Set<AuthorizationGrantType> authorizationGrantTypes = new HashSet<>();    public AuthClient() {    }    public AuthClient(String id, String clientId, String clientSecret, Instant clientSecretExpiresAt, Instant clientIdIssuedAt, Instant updatedAt, String clientName, Set<RedirectUri> redirectUris, Set<Scope> scopes, Set<PostLogoutRedirectUri> postLogoutRedirectUris, Set<AuthenticationMethod> authenticationMethods, Set<AuthorizationGrantType> authorizationGrantTypes) {        this.id = id;        this.clientId = clientId;        this.clientSecret = clientSecret;        this.clientSecretExpiresAt = clientSecretExpiresAt;        this.clientIdIssuedAt = clientIdIssuedAt;        this.updatedAt = updatedAt;        this.clientName = clientName;        this.redirectUris = redirectUris;        this.scopes = scopes;        this.postLogoutRedirectUris = postLogoutRedirectUris;        this.authenticationMethods = authenticationMethods;        this.authorizationGrantTypes = authorizationGrantTypes;    }    public String getId() {        return id;    }    public void setId(String id) {        this.id = id;    }    public String getClientId() {        return clientId;    }    public void setClientId(String clientId) {        this.clientId = clientId;    }    public String getClientSecret() {        return clientSecret;    }    public void setClientSecret(String clientSecret) {        this.clientSecret = clientSecret;    }    public Instant getClientSecretExpiresAt() {        return clientSecretExpiresAt;    }    public void setClientSecretExpiresAt(Instant clientSecretExpiresAt) {        this.clientSecretExpiresAt = clientSecretExpiresAt;    }    public Instant getClientIdIssuedAt() {        return clientIdIssuedAt;    }    public void setClientIdIssuedAt(Instant clientIdIssuedAt) {        this.clientIdIssuedAt = clientIdIssuedAt;    }    public Instant getUpdatedAt() {        return updatedAt;    }    public void setUpdatedAt(Instant updatedAt) {        this.updatedAt = updatedAt;    }    public String getClientName() {        return clientName;    }    public void setClientName(String clientName) {        this.clientName = clientName;    }    public Set<RedirectUri> getRedirectUris() {        return redirectUris;    }    public void setRedirectUris(Set<RedirectUri> redirectUris) {        this.redirectUris = redirectUris;    }    public Set<Scope> getScopes() {        return scopes;    }    public void setScopes(Set<Scope> scopes) {        this.scopes = scopes;    }    public Set<PostLogoutRedirectUri> getPostLogoutRedirectUris() {        return postLogoutRedirectUris;    }    public void setPostLogoutRedirectUris(Set<PostLogoutRedirectUri> postLogoutRedirectUris) {        this.postLogoutRedirectUris = postLogoutRedirectUris;    }    public Set<AuthenticationMethod> getAuthenticationMethods() {        return authenticationMethods;    }    public void setAuthenticationMethods(Set<AuthenticationMethod> authenticationMethods) {        this.authenticationMethods = authenticationMethods;    }    public Set<AuthorizationGrantType> getAuthorizationGrantTypes() {        return authorizationGrantTypes;    }    public void setAuthorizationGrantTypes(Set<AuthorizationGrantType> authorizationGrantTypes) {        this.authorizationGrantTypes = authorizationGrantTypes;    }}